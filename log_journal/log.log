2022-05-31 22:09:10,777 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:09:10,777 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:09:10,778 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:09:10,778 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:09:10,778 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:09:10,778 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:09:10,778 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:09:10,778 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:09:10,778 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:10:47,488 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:10:47,489 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:10:47,489 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:10:47,489 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:10:47,489 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:10:51,857 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:10:51,857 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:10:51,857 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:10:51,858 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:10:51,858 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:11:55,118 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:11:55,118 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:11:55,118 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:11:55,119 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:11:55,119 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:11:55,119 ERROR: <client.py> <result = client.request('presenc')>: action not allowed
2022-05-31 22:13:42,897 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:13:42,898 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:13:42,898 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:13:42,898 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 22:13:42,898 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:13:42,898 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:13:42,898 ERROR: <client.py> <result = client.request('presenc')>: action not allowed
2022-05-31 22:14:44,825 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:14:44,825 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:14:44,825 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:14:44,826 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 22:14:44,826 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:14:44,826 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:14:44,826 ERROR: <client.py> <result = client.request('presence')>: Not connected
2022-05-31 22:15:58,879 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 167)
2022-05-31 22:15:58,879 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 96)
2022-05-31 22:15:58,879 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 169)
2022-05-31 22:16:02,189 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:16:02,189 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:16:02,189 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:16:02,189 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:16:02,190 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:16:02,190 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:16:02,190 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:16:02,190 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:16:02,190 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:16:02,190 ERROR: <client.py> <request = handler()>: 1 validation error for Request
action
  field required (type=value_error.missing)
2022-05-31 22:16:02,190 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:16:02,190 ERROR: <client.py> <response = self.send_request(request)>: a bytes-like object is required, not 'NoneType'
2022-05-31 22:16:02,191 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:17:09,965 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:17:09,965 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:17:09,965 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:17:09,965 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:17:09,966 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:17:09,966 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:17:09,966 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:17:09,966 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:17:09,966 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:17:09,966 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:17:09,967 DEBUG: <client.py> функция <receive> вызвана из send_request (return self.receive(), строка 73)
2022-05-31 22:17:09,967 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 60)
2022-05-31 22:17:09,967 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (return handler(), строка 61)
2022-05-31 22:17:09,967 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (stdout = self.send_response(response), строка 50)
2022-05-31 22:17:09,969 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:24:04,565 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:24:04,565 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:24:04,565 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:24:04,566 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 22:24:04,566 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:24:04,566 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:24:04,566 ERROR: <client.py> <result = client.request('presence')>: Not connected
2022-05-31 22:24:10,005 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 167)
2022-05-31 22:24:10,005 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 96)
2022-05-31 22:24:10,005 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 169)
2022-05-31 22:24:12,787 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:24:12,788 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:24:12,788 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:24:12,788 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:24:12,788 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:24:12,788 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:24:12,789 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:24:12,789 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:24:12,789 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:24:12,789 ERROR: <client.py> <request = handler()>: 1 validation error for Request action field required (type=value_error.missing)
2022-05-31 22:24:12,789 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:24:12,789 ERROR: <client.py> <response = self.send_request(request)>: a bytes-like object is required, not 'NoneType'
2022-05-31 22:24:12,789 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:25:41,063 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:25:41,063 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:25:41,063 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:25:41,064 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:25:41,064 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:25:41,064 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:25:41,064 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:25:41,064 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:25:41,064 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:25:41,065 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:25:41,065 DEBUG: <client.py> функция <receive> вызвана из send_request (return self.receive(), строка 73)
2022-05-31 22:25:41,065 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 60)
2022-05-31 22:25:41,065 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (return handler(), строка 61)
2022-05-31 22:25:41,066 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (stdout = self.send_response(response), строка 50)
2022-05-31 22:25:41,067 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:28:49,259 DEBUG:  <client.py>  функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:28:49,259 DEBUG:  <client.py>  функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:28:49,259 DEBUG:  <client.py>  функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:28:49,259 DEBUG:  <client.py>  функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:28:49,260 DEBUG:  <client.py>  функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:28:49,260 DEBUG:  <client.py>  функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:28:49,260 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:28:49,260 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:28:49,260 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:28:49,260 DEBUG:  <client.py>  функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:28:49,261 DEBUG:  <client.py>  функция <receive> вызвана из send_request (return self.receive(), строка 73)
2022-05-31 22:28:49,261 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 60)
2022-05-31 22:28:49,261 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (return handler(), строка 61)
2022-05-31 22:28:49,261 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (stdout = self.send_response(response), строка 50)
2022-05-31 22:28:49,262 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:29:09,981 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:29:09,982 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:29:09,982 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:29:09,982 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:29:09,982 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:29:09,983 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:29:09,983 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 117)
2022-05-31 22:29:09,983 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 147)
2022-05-31 22:29:09,983 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 148)
2022-05-31 22:29:09,983 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:29:09,983 DEBUG: <client.py> функция <receive> вызвана из send_request (return self.receive(), строка 73)
2022-05-31 22:29:09,984 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 60)
2022-05-31 22:29:09,984 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (return handler(), строка 61)
2022-05-31 22:29:09,984 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (stdout = self.send_response(response), строка 50)
2022-05-31 22:29:09,985 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 138)
2022-05-31 22:47:19,582 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 170)
2022-05-31 22:47:19,583 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 110)
2022-05-31 22:47:19,583 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 172)
2022-05-31 22:47:22,867 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:47:22,867 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:47:22,867 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:47:22,867 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:47:22,867 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:47:22,868 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 131)
2022-05-31 22:47:22,868 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:47:22,868 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 22:47:22,868 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 162)
2022-05-31 22:47:22,868 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:47:22,868 DEBUG: <client.py> функция <receive> вызвана из send_request (return self.receive(), строка 73)
2022-05-31 22:47:22,869 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 74)
2022-05-31 22:47:22,869 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (return handler(), строка 75)
2022-05-31 22:47:22,870 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (stdout = self.send_response(response), строка 50)
2022-05-31 22:47:22,871 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 22:48:01,516 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:48:01,516 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:48:01,516 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:48:01,516 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:48:01,517 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:48:01,517 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 131)
2022-05-31 22:48:01,517 ERROR: <client.py> <result = client.request('presenc')>: Action not allowed
2022-05-31 22:48:01,517 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 22:48:01,517 ERROR: <client.py> <main()>: 'AssertionError' object has no attribute 'json'
2022-05-31 22:48:01,517 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 162)
2022-05-31 22:48:01,517 DEBUG: <server.py> функция <send_response> вызвана из handle_error (stderr = self.send_response(response), строка 62)
2022-05-31 22:48:01,517 ERROR: <server.py> <stderr = self.send_response(response)>: 'bytes' object has no attribute 'json'
2022-05-31 22:48:01,518 ERROR: <server.py> <result = handler.handle_request()>: 'bytes' object has no attribute 'json'
2022-05-31 22:48:01,518 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 22:52:18,350 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 170)
2022-05-31 22:52:18,350 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 110)
2022-05-31 22:52:18,350 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 172)
2022-05-31 22:52:20,326 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:52:20,327 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:52:20,327 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:52:20,327 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 104)
2022-05-31 22:52:20,327 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:52:20,327 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 131)
2022-05-31 22:52:20,327 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 89)
2022-05-31 22:52:20,327 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 22:52:20,328 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 162)
2022-05-31 22:52:20,328 DEBUG: <client.py> функция <send_request> вызвана из request (response = self.send_request(request), строка 90)
2022-05-31 22:52:20,328 DEBUG: <client.py> функция <receive> вызвана из send_request (return self.receive(), строка 73)
2022-05-31 22:52:20,329 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 74)
2022-05-31 22:52:20,329 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (return handler(), строка 75)
2022-05-31 22:52:20,329 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (stdout = self.send_response(response), строка 50)
2022-05-31 22:52:20,330 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 22:52:28,942 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:52:28,942 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:52:28,942 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:52:28,943 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:52:28,943 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:52:28,943 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 131)
2022-05-31 22:52:28,943 ERROR: <client.py> <result = client.request('presenc')>: Action not allowed
2022-05-31 22:52:28,943 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 22:52:28,943 ERROR: <client.py> <main()>: 'AssertionError' object has no attribute 'json'
2022-05-31 22:52:28,943 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 162)
2022-05-31 22:52:28,944 DEBUG: <server.py> функция <send_response> вызвана из handle_error (stderr = self.send_response(response), строка 62)
2022-05-31 22:52:28,944 ERROR: <server.py> <result = handler.handle_request()>: exceptions must derive from BaseException
2022-05-31 22:52:28,944 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 22:53:11,645 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 115)
2022-05-31 22:53:11,646 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 103)
2022-05-31 22:53:11,646 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 22:53:11,646 DEBUG: <server.py> функция <handle_request> вызвана из serve (stdout = self.handle_request(address), строка 131)
2022-05-31 22:53:11,646 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 22:53:11,647 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (result = handler.handle_request(), строка 162)
2022-05-31 22:53:11,647 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 104)
2022-05-31 22:53:11,647 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 77)
2022-05-31 22:53:11,647 ERROR: <client.py> <result = client.request('presenc')>: Action not allowed
2022-05-31 22:53:11,647 DEBUG: <server.py> функция <send_response> вызвана из handle_error (stderr = self.send_response(response), строка 62)
2022-05-31 22:53:11,647 ERROR: <server.py> <result = handler.handle_request()>: exceptions must derive from BaseException
2022-05-31 22:53:11,648 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:00:04,735 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 170)
2022-05-31 23:00:04,735 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 110)
2022-05-31 23:00:04,735 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 172)
2022-05-31 23:00:08,802 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:00:08,802 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:00:08,802 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:00:08,803 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 101)
2022-05-31 23:00:08,803 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:00:08,803 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:00:08,803 ERROR: <client.py> <result = client.request('presenc')>: Action not allowed
2022-05-31 23:00:08,803 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:00:08,803 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:00:08,804 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:00:08,805 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:00:08,805 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:01:50,827 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 170)
2022-05-31 23:01:50,827 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 110)
2022-05-31 23:01:50,827 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 172)
2022-05-31 23:01:53,113 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:01:53,113 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:01:53,113 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:01:53,114 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presenc'), строка 101)
2022-05-31 23:01:53,114 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:01:53,114 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:01:53,114 ERROR: <client.py> <result = client.request('presenc')>: Action not allowed
2022-05-31 23:01:53,114 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:01:53,114 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:01:53,115 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:01:53,115 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:01:53,116 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:02:03,304 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:02:03,304 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:02:03,304 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:02:03,305 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 101)
2022-05-31 23:02:03,305 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:02:03,305 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:02:03,305 ERROR: <client.py> <result = client.request('presence')>: Action not allowed
2022-05-31 23:02:03,305 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:02:03,305 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:02:03,305 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:02:03,306 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:02:03,306 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:04:33,610 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:04:33,610 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:04:33,610 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:04:33,611 DEBUG: <client.py> функция <request> вызвана из main (result = client.request('presence'), строка 101)
2022-05-31 23:04:33,611 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:04:33,611 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:04:33,611 ERROR: <client.py> <result = client.request('presence')>: Action not allowed
2022-05-31 23:04:33,611 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:04:33,611 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:04:33,611 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:04:33,612 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:04:33,612 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:06:17,373 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:06:17,373 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:06:17,373 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:06:17,373 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:06:17,374 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:06:17,374 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:06:17,374 ERROR: <client.py> <client.request('presence')>: Action not allowed
2022-05-31 23:06:17,374 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:06:17,374 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:06:17,374 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:06:17,374 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:06:17,375 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:07:01,506 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 108)
2022-05-31 23:07:01,507 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 99)
2022-05-31 23:07:01,507 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:07:01,507 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 100)
2022-05-31 23:07:01,507 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 87)
2022-05-31 23:07:01,507 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:07:01,507 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:07:01,508 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:07:01,508 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 88)
2022-05-31 23:07:01,508 ERROR: <client.py> <self.send_request(request)>: a bytes-like object is required, not 'NoneType'
2022-05-31 23:07:01,508 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 89)
2022-05-31 23:07:29,976 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:07:29,977 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:07:29,977 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:07:33,698 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 107)
2022-05-31 23:07:33,699 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 98)
2022-05-31 23:07:33,699 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:07:33,699 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 99)
2022-05-31 23:07:33,699 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:07:33,699 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:07:33,700 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:07:33,700 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 87)
2022-05-31 23:07:33,700 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 88)
2022-05-31 23:07:33,701 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 74)
2022-05-31 23:07:33,701 ERROR: <server.py> <handler.handle_request()>: 'NoneType' object is not callable
2022-05-31 23:07:33,701 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:07:33,701 ERROR: <client.py> <self.receive()>: 1 validation error for Response __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:09:30,519 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 170)
2022-05-31 23:09:30,519 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 110)
2022-05-31 23:09:30,519 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 172)
2022-05-31 23:09:33,650 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:09:33,651 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:09:33,651 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:09:33,651 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:09:33,651 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:09:33,651 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:09:33,651 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 88)
2022-05-31 23:09:33,652 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:09:33,652 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:09:33,652 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 89)
2022-05-31 23:09:33,652 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 90)
2022-05-31 23:09:33,653 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 74)
2022-05-31 23:09:33,653 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 75)
2022-05-31 23:09:33,653 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 50)
2022-05-31 23:09:33,654 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:09:42,756 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:09:42,756 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:09:42,756 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:09:42,757 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:09:42,757 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:09:42,757 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 131)
2022-05-31 23:09:42,757 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:09:42,757 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 161)
2022-05-31 23:09:42,757 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 162)
2022-05-31 23:09:42,758 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:09:42,758 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:09:42,758 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 152)
2022-05-31 23:15:30,066 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 154)
2022-05-31 23:15:30,066 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 147)
2022-05-31 23:15:30,066 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 100)
2022-05-31 23:15:30,066 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 149)
2022-05-31 23:15:32,952 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:15:32,952 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:15:32,953 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:15:32,953 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:15:32,953 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:15:32,953 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 118)
2022-05-31 23:15:32,953 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 88)
2022-05-31 23:15:32,953 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 138)
2022-05-31 23:15:32,953 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 139)
2022-05-31 23:15:32,954 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 89)
2022-05-31 23:15:32,954 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 90)
2022-05-31 23:15:32,954 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 64)
2022-05-31 23:15:32,955 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 65)
2022-05-31 23:15:32,955 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 47)
2022-05-31 23:15:32,956 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 133)
2022-05-31 23:15:41,495 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:15:41,495 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:15:41,495 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:15:41,496 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:15:41,496 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:15:41,496 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 118)
2022-05-31 23:15:41,496 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:15:41,496 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 138)
2022-05-31 23:15:41,496 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 139)
2022-05-31 23:15:41,497 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 57)
2022-05-31 23:15:41,497 ERROR: <server.py> <handler.handle_request()>: 1 validation error for Request __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:15:41,497 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 133)
2022-05-31 23:17:06,314 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 143)
2022-05-31 23:17:06,314 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 136)
2022-05-31 23:17:06,316 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 103)
2022-05-31 23:17:06,316 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 138)
2022-05-31 23:17:09,007 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:17:09,007 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:17:09,008 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:17:09,008 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:17:09,008 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:17:09,008 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 120)
2022-05-31 23:17:09,008 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:17:09,008 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 126)
2022-05-31 23:17:09,008 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 127)
2022-05-31 23:17:09,008 ERROR: <server.py> <handler.handle_request()>: 
2022-05-31 23:17:09,009 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 121)
2022-05-31 23:17:43,996 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:17:43,996 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:17:43,997 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:17:43,997 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:17:43,997 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:17:43,997 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:17:43,997 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 120)
2022-05-31 23:17:43,997 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 126)
2022-05-31 23:17:43,998 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 127)
2022-05-31 23:17:43,998 ERROR: <server.py> <handler.handle_request()>: 
2022-05-31 23:17:43,998 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 121)
2022-05-31 23:18:57,989 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 145)
2022-05-31 23:18:57,989 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 138)
2022-05-31 23:18:57,989 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 105)
2022-05-31 23:18:57,989 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 140)
2022-05-31 23:19:00,739 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:19:00,739 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:19:00,740 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:19:00,740 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:19:00,740 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:19:00,740 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 122)
2022-05-31 23:19:00,740 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:19:00,740 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 128)
2022-05-31 23:19:00,741 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 129)
2022-05-31 23:19:00,741 ERROR: <server.py> <handler.handle_request()>: No data received
2022-05-31 23:19:00,741 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 123)
2022-05-31 23:19:58,869 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:19:58,870 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:19:58,870 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:19:58,870 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 23:19:58,870 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:19:58,871 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:19:58,871 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:20:10,395 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:20:10,395 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:20:10,395 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:20:10,396 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 23:20:10,396 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:20:10,396 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:20:10,396 ERROR: <client.py> <client.request('presence')>: Not connected
2022-05-31 23:28:12,416 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:28:12,416 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:28:12,416 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:28:12,417 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 23:28:12,417 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:28:12,417 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:28:12,417 ERROR: <client.py> <client.request('presence')>: Not connected
2022-05-31 23:28:44,903 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:28:44,903 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:28:44,903 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:28:44,904 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 23:28:44,904 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:28:44,904 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:28:44,904 ERROR: <client.py> <client.request('presence')>: Not connected
2022-05-31 23:29:58,080 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:29:58,081 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:29:58,081 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:29:58,081 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 23:29:58,081 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:29:58,081 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:29:58,082 ERROR: <client.py> <client.request('presence')>: Not connected
2022-05-31 23:30:00,582 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 145)
2022-05-31 23:30:00,582 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 138)
2022-05-31 23:30:00,582 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 105)
2022-05-31 23:30:00,582 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 140)
2022-05-31 23:30:03,581 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:30:03,581 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:30:03,581 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:30:03,582 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 101)
2022-05-31 23:30:03,582 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:30:03,582 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 122)
2022-05-31 23:30:03,582 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 88)
2022-05-31 23:30:03,582 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 128)
2022-05-31 23:30:03,582 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 129)
2022-05-31 23:30:03,583 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 89)
2022-05-31 23:30:03,583 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 90)
2022-05-31 23:30:03,583 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 67)
2022-05-31 23:30:03,584 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 68)
2022-05-31 23:30:03,584 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 47)
2022-05-31 23:30:03,585 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 123)
2022-05-31 23:30:20,942 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 109)
2022-05-31 23:30:20,942 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 100)
2022-05-31 23:30:20,942 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 39)
2022-05-31 23:30:20,942 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 101)
2022-05-31 23:30:20,943 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 76)
2022-05-31 23:30:20,943 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 122)
2022-05-31 23:30:20,943 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:30:20,943 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 128)
2022-05-31 23:30:20,943 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 129)
2022-05-31 23:30:20,943 ERROR: <server.py> <handler.handle_request()>: No data received
2022-05-31 23:30:20,943 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 123)
2022-05-31 23:33:08,621 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 148)
2022-05-31 23:33:08,621 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 141)
2022-05-31 23:33:08,621 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 104)
2022-05-31 23:33:08,621 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 143)
2022-05-31 23:33:10,714 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:33:10,714 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:33:10,714 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:33:10,715 DEBUG: <client.py> функция <request> вызвана из main (client.request('presenc'), строка 89)
2022-05-31 23:33:10,715 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:33:10,715 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 124)
2022-05-31 23:33:10,715 ERROR: <client.py> <client.request('presenc')>: Action not allowed
2022-05-31 23:33:10,715 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 131)
2022-05-31 23:33:10,715 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 132)
2022-05-31 23:33:10,715 ERROR: <server.py> <handler.handle_request()>: No data received
2022-05-31 23:33:10,715 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 125)
2022-05-31 23:33:30,209 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:33:30,209 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:33:30,209 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:33:30,210 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:33:30,210 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:33:30,210 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 124)
2022-05-31 23:33:30,210 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:33:30,210 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 131)
2022-05-31 23:33:30,210 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 132)
2022-05-31 23:33:30,211 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:33:30,211 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:33:30,212 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 67)
2022-05-31 23:33:30,212 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 68)
2022-05-31 23:33:30,212 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 47)
2022-05-31 23:33:30,213 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 125)
2022-05-31 23:35:37,527 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 149)
2022-05-31 23:35:37,527 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 142)
2022-05-31 23:35:37,527 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 105)
2022-05-31 23:35:37,528 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 144)
2022-05-31 23:35:40,079 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:35:40,079 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:35:40,080 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:35:40,080 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:35:40,080 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:35:40,080 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 125)
2022-05-31 23:35:40,080 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:35:40,080 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 132)
2022-05-31 23:35:40,080 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-05-31 23:35:40,081 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:35:40,081 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:35:40,081 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:35:40,082 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 69)
2022-05-31 23:35:40,082 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 48)
2022-05-31 23:35:40,083 ERROR: <server.py> <self.send_response(response)>: unsupported operand type(s) for -: 'str' and 'set'
2022-05-31 23:35:40,083 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 126)
2022-05-31 23:36:04,556 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:36:04,557 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:36:04,557 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:36:04,557 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:36:04,557 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:36:04,557 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:36:04,557 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 125)
2022-05-31 23:36:04,558 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 132)
2022-05-31 23:36:04,558 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-05-31 23:36:04,558 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:36:04,558 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:36:04,559 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:36:04,559 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 69)
2022-05-31 23:36:04,559 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 48)
2022-05-31 23:36:04,559 ERROR: <server.py> <self.send_response(response)>: unsupported operand type(s) for -: 'str' and 'set'
2022-05-31 23:36:04,560 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 126)
2022-05-31 23:36:28,551 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 149)
2022-05-31 23:36:28,551 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 142)
2022-05-31 23:36:28,551 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 105)
2022-05-31 23:36:28,551 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 144)
2022-05-31 23:36:31,774 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:36:31,774 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:36:31,774 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:36:31,775 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:36:31,775 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:36:31,775 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 125)
2022-05-31 23:36:31,775 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:36:31,775 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 132)
2022-05-31 23:36:31,775 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-05-31 23:36:31,776 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:36:31,776 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:36:31,776 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:36:31,776 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 69)
2022-05-31 23:36:31,777 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 48)
2022-05-31 23:36:31,778 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 126)
2022-05-31 23:37:11,837 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:37:11,837 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:37:11,837 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:37:11,838 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:37:11,838 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:37:11,838 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:37:11,838 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 125)
2022-05-31 23:37:11,838 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 132)
2022-05-31 23:37:11,838 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-05-31 23:37:11,839 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:37:11,839 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:37:11,839 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:37:11,839 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 69)
2022-05-31 23:37:11,840 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 48)
2022-05-31 23:37:11,840 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 126)
2022-05-31 23:37:19,173 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 149)
2022-05-31 23:37:19,173 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 142)
2022-05-31 23:37:19,173 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 105)
2022-05-31 23:37:19,173 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 144)
2022-05-31 23:37:21,871 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:37:21,871 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:37:21,871 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:37:21,872 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:37:21,872 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:37:21,872 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 125)
2022-05-31 23:37:21,872 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:37:21,872 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 132)
2022-05-31 23:37:21,872 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-05-31 23:37:21,873 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:37:21,873 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:37:21,873 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:37:21,874 ERROR: <server.py> <handler.handle_request()>: 'NoneType' object is not callable
2022-05-31 23:37:21,874 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 126)
2022-05-31 23:37:21,874 ERROR: <client.py> <self.receive()>: 1 validation error for Response __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:38:26,056 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 152)
2022-05-31 23:38:26,056 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 145)
2022-05-31 23:38:26,056 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 108)
2022-05-31 23:38:26,056 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 147)
2022-05-31 23:38:28,124 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 97)
2022-05-31 23:38:28,124 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 88)
2022-05-31 23:38:28,124 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:38:28,125 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 89)
2022-05-31 23:38:28,125 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:38:28,125 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 128)
2022-05-31 23:38:28,125 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:38:28,125 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 135)
2022-05-31 23:38:28,125 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 136)
2022-05-31 23:38:28,126 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:38:28,126 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:38:28,126 ERROR: <server.py> <handler.handle_request()>: Action not allowed
2022-05-31 23:38:28,126 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 129)
2022-05-31 23:38:28,126 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:38:28,127 ERROR: <client.py> <self.receive()>: 1 validation error for Response __root__ Expecting value: line 1 column 1 (char 0) (type=value_error.jsondecode; msg=Expecting value; doc=; pos=0; lineno=1; colno=1)
2022-05-31 23:40:13,689 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 152)
2022-05-31 23:40:13,689 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 145)
2022-05-31 23:40:13,690 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 108)
2022-05-31 23:40:13,690 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 147)
2022-05-31 23:40:15,968 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 99)
2022-05-31 23:40:15,969 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 90)
2022-05-31 23:40:15,969 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:40:15,969 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 91)
2022-05-31 23:40:15,969 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:40:15,969 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 128)
2022-05-31 23:40:15,969 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:40:15,970 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 135)
2022-05-31 23:40:15,970 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 136)
2022-05-31 23:40:15,970 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:40:15,970 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:40:15,971 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 68)
2022-05-31 23:40:15,971 ERROR: <server.py> <handler.handle_request()>: Action not allowed
2022-05-31 23:40:15,971 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 129)
2022-05-31 23:40:15,972 ERROR: <client.py> <self.receive()>: No data received
2022-05-31 23:42:58,854 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 160)
2022-05-31 23:42:58,855 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 153)
2022-05-31 23:42:58,855 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 116)
2022-05-31 23:42:58,855 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 155)
2022-05-31 23:43:01,171 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 99)
2022-05-31 23:43:01,172 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 90)
2022-05-31 23:43:01,172 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:43:01,172 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 91)
2022-05-31 23:43:01,172 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:43:01,172 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 136)
2022-05-31 23:43:01,172 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:43:01,172 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 143)
2022-05-31 23:43:01,173 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 144)
2022-05-31 23:43:01,173 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:43:01,173 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:43:01,174 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 72)
2022-05-31 23:43:01,174 ERROR: <server.py> <handler.handle_request()>: local variable 'msg' referenced before assignment
2022-05-31 23:43:01,174 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 137)
2022-05-31 23:43:01,174 ERROR: <client.py> <self.receive()>: No data received
2022-05-31 23:43:40,716 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 160)
2022-05-31 23:43:40,716 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 153)
2022-05-31 23:43:40,717 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 116)
2022-05-31 23:43:40,717 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 155)
2022-05-31 23:43:42,842 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 99)
2022-05-31 23:43:42,842 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 90)
2022-05-31 23:43:42,843 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:43:42,843 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 91)
2022-05-31 23:43:42,843 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:43:42,843 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 136)
2022-05-31 23:43:42,843 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:43:42,843 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 143)
2022-05-31 23:43:42,844 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 144)
2022-05-31 23:43:42,844 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:43:42,844 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:43:42,845 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 72)
2022-05-31 23:43:42,845 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:43:42,846 ERROR: <server.py> <handler.handle_request()>: Action not allowed
2022-05-31 23:43:42,846 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 137)
2022-05-31 23:44:30,971 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 99)
2022-05-31 23:44:30,971 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 90)
2022-05-31 23:44:30,971 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:44:30,971 ERROR: <client.py> <self.connect()>: [Errno 111] Connection refused
2022-05-31 23:44:30,972 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 91)
2022-05-31 23:44:30,972 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:44:30,972 ERROR: <client.py> <client.request('presence')>: Not connected
2022-05-31 23:44:33,641 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 160)
2022-05-31 23:44:33,641 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 153)
2022-05-31 23:44:33,642 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 116)
2022-05-31 23:44:33,642 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 155)
2022-05-31 23:44:35,794 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 99)
2022-05-31 23:44:35,795 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 90)
2022-05-31 23:44:35,795 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:44:35,795 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 91)
2022-05-31 23:44:35,795 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:44:35,795 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 136)
2022-05-31 23:44:35,795 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:44:35,796 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 143)
2022-05-31 23:44:35,796 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 144)
2022-05-31 23:44:35,796 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:44:35,796 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:44:35,797 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 72)
2022-05-31 23:44:35,797 DEBUG: <server.py> функция <send_response> вызвана из handle_error (self.send_response(response), строка 62)
2022-05-31 23:44:35,798 ERROR: <server.py> <handler.handle_request()>: Action not allowed
2022-05-31 23:44:35,799 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 137)
2022-05-31 23:45:05,938 DEBUG: <server.py> функция <main> вызвана из <module> (main(), строка 160)
2022-05-31 23:45:05,939 DEBUG: <server.py> функция <__init__> вызвана из main (with TCPSocketServer(host=srv_host, port=srv_port) as server:, строка 153)
2022-05-31 23:45:05,939 DEBUG: <server.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 116)
2022-05-31 23:45:05,939 DEBUG: <server.py> функция <serve> вызвана из main (server.serve(), строка 155)
2022-05-31 23:45:08,719 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 99)
2022-05-31 23:45:08,719 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username='test user', password='password', connect=True) as client:, строка 90)
2022-05-31 23:45:08,720 DEBUG: <client.py> функция <connect> вызвана из __init__ (self.connect(), строка 37)
2022-05-31 23:45:08,720 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 91)
2022-05-31 23:45:08,720 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 71)
2022-05-31 23:45:08,720 DEBUG: <server.py> функция <handle_request> вызвана из serve (self.handle_request(address), строка 136)
2022-05-31 23:45:08,720 DEBUG: <client.py> функция <get_presence> вызвана из request (request = handler(), строка 76)
2022-05-31 23:45:08,720 DEBUG: <server.py> функция <__init__> вызвана из handle_request (handler = RequestHandler(self.request, address, self), строка 143)
2022-05-31 23:45:08,720 DEBUG: <server.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 144)
2022-05-31 23:45:08,721 DEBUG: <client.py> функция <send_request> вызвана из request (self.send_request(request), строка 77)
2022-05-31 23:45:08,721 DEBUG: <client.py> функция <receive> вызвана из request (self.receive(), строка 78)
2022-05-31 23:45:08,722 DEBUG: <server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 72)
2022-05-31 23:45:08,722 DEBUG: <server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 75)
2022-05-31 23:45:08,722 DEBUG: <server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 48)
2022-05-31 23:45:08,723 DEBUG: <server.py> функция <close_request> вызвана из serve (self.close_request(), строка 137)
