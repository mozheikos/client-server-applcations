2022-06-04 22:03:30,441 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-04 22:03:35,228 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 145)
2022-06-04 22:03:35,228 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 146)
2022-06-04 22:03:35,229 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 149)
2022-06-04 22:03:35,229 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 115)
2022-06-04 22:03:35,230 DEBUG: <client.py> функция <get_presence> вызвана из request (handler(), строка 120)
2022-06-04 22:03:35,230 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 69)
2022-06-04 22:03:35,231 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 70)
2022-06-04 22:03:37,268 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.recv), строка 160)
2022-06-04 22:03:37,268 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 115)
2022-06-04 22:03:37,268 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 120)
2022-06-04 22:04:49,915 DEBUG: <client.py> функция <__init__> вызвана из main (if client.is_connected:, строка 145)
2022-06-04 22:04:49,915 DEBUG: <client.py> функция <connect> вызвана из main (, строка 146)
2022-06-04 22:04:49,915 DEBUG: <client.py> функция <request> вызвана из main (action = int(input('1. send\n2. receive\n')), строка 149)
2022-06-04 22:04:49,916 DEBUG: <client.py> функция <get_method> вызвана из request (assert handler, 'Action not allowed', строка 115)
2022-06-04 22:04:49,916 DEBUG: <client.py> функция <get_presence> вызвана из request (@log, строка 120)
2022-06-04 22:04:49,916 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 69)
2022-06-04 22:04:49,917 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 70)
2022-06-04 22:04:51,978 DEBUG: <client.py> функция <request> вызвана из main (request = Request(, строка 160)
2022-06-04 22:04:51,978 DEBUG: <client.py> функция <get_method> вызвана из request (assert handler, 'Action not allowed', строка 115)
2022-06-04 22:04:51,978 DEBUG: <client.py> функция <receive_message> вызвана из request (@log, строка 120)
2022-06-04 22:05:16,710 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-04 22:05:24,002 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 143)
2022-06-04 22:05:24,002 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 144)
2022-06-04 22:05:24,003 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 22:05:33,633 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 143)
2022-06-04 22:05:33,634 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 144)
2022-06-04 22:05:33,634 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 22:08:07,625 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-04 22:08:12,182 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 143)
2022-06-04 22:08:12,182 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 144)
2022-06-04 22:08:12,183 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 22:09:52,026 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-04 22:09:57,883 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 141)
2022-06-04 22:09:57,884 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 142)
2022-06-04 22:09:57,884 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 145)
2022-06-04 22:09:57,885 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 109)
2022-06-04 22:09:57,885 DEBUG: <client.py> функция <get_presence> вызвана из request (handler(), строка 114)
2022-06-04 22:09:57,886 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 69)
2022-06-04 22:09:57,886 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 70)
2022-06-04 22:10:00,811 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.msg), строка 154)
2022-06-04 22:10:00,811 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 109)
2022-06-04 22:10:00,811 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 114)
2022-06-04 22:10:04,979 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 95)
2022-06-04 22:10:12,862 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-04 22:10:18,419 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 141)
2022-06-04 22:10:18,420 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 142)
2022-06-04 22:10:18,420 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 145)
2022-06-04 22:10:18,420 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 109)
2022-06-04 22:10:18,420 DEBUG: <client.py> функция <get_presence> вызвана из request (handler(), строка 114)
2022-06-04 22:10:18,421 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 69)
2022-06-04 22:10:18,422 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 70)
2022-06-04 22:10:19,251 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.recv), строка 156)
2022-06-04 22:10:19,251 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 109)
2022-06-04 22:10:19,252 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 114)
2022-06-04 22:13:12,637 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 179)
2022-06-04 22:13:16,519 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 137)
2022-06-04 22:13:16,520 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 138)
2022-06-04 22:13:16,520 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 141)
2022-06-04 22:13:16,520 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:16,520 DEBUG: <client.py> функция <get_presence> вызвана из request (handler(), строка 110)
2022-06-04 22:13:16,521 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 69)
2022-06-04 22:13:16,521 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 70)
2022-06-04 22:13:20,815 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.msg), строка 150)
2022-06-04 22:13:20,815 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:20,815 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-04 22:13:23,945 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 179)
2022-06-04 22:13:27,990 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 137)
2022-06-04 22:13:27,991 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 138)
2022-06-04 22:13:27,991 DEBUG: <client.py> функция <request> вызвана из main (client.request('presence'), строка 141)
2022-06-04 22:13:27,991 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:27,991 DEBUG: <client.py> функция <get_presence> вызвана из request (handler(), строка 110)
2022-06-04 22:13:27,992 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 69)
2022-06-04 22:13:27,992 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 70)
2022-06-04 22:13:28,742 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.recv), строка 152)
2022-06-04 22:13:28,743 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:28,744 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 110)
2022-06-04 22:13:32,463 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 91)
2022-06-04 22:13:32,463 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.msg), строка 150)
2022-06-04 22:13:32,463 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:32,463 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-04 22:13:32,463 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.recv), строка 152)
2022-06-04 22:13:32,464 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:32,464 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 110)
2022-06-04 22:13:44,175 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 91)
2022-06-04 22:13:44,175 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.msg), строка 150)
2022-06-04 22:13:44,175 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-04 22:13:44,176 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-04 22:13:45,599 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 91)
2022-06-04 22:13:45,599 ERROR: <client.py> <if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):>: [Errno 32] Broken pipe
2022-06-04 23:09:01,156 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-04 23:09:05,581 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:09:05,581 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:09:05,581 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:09:05,581 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:09:05,582 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:10:32,479 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 184)
2022-06-04 23:10:37,803 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:10:37,803 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:10:37,803 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:10:37,803 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:10:37,804 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:10:40,250 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 168)
2022-06-04 23:10:40,250 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:10:40,251 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 112)
2022-06-04 23:10:49,649 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 184)
2022-06-04 23:10:54,634 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:10:54,635 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:10:54,635 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:10:54,635 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:10:54,636 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:11:02,946 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.msg), строка 161)
2022-06-04 23:11:02,946 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:11:02,947 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:11:04,666 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:11:04,667 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.msg), строка 161)
2022-06-04 23:11:04,667 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:11:04,667 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:11:05,698 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:11:05,698 ERROR: <client.py> <if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):>: [Errno 32] Broken pipe
2022-06-04 23:29:16,771 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 180)
2022-06-04 23:29:16,799 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:29:24,029 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 180)
2022-06-04 23:29:32,783 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:29:32,783 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:29:32,784 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:29:32,784 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:29:32,784 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:29:38,487 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 160)
2022-06-04 23:29:38,487 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:29:38,487 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 112)
2022-06-04 23:29:50,726 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 164)
2022-06-04 23:29:50,727 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:29:50,727 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 112)
2022-06-04 23:29:54,148 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 180)
2022-06-04 23:29:59,670 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:29:59,671 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:29:59,671 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:29:59,671 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:29:59,671 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:31:26,948 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 164)
2022-06-04 23:31:26,948 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:31:26,948 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 112)
2022-06-04 23:31:43,181 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 180)
2022-06-04 23:31:43,184 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:31:51,347 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 180)
2022-06-04 23:31:52,091 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:32:23,598 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 180)
2022-06-04 23:32:43,922 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:33:14,784 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 181)
2022-06-04 23:33:15,626 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:37:11,992 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 184)
2022-06-04 23:37:20,236 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:37:20,236 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:37:20,237 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:37:20,237 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:37:20,237 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:37:35,228 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:37:57,529 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 184)
2022-06-04 23:38:03,332 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:38:03,332 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:38:03,333 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:38:03,333 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:38:03,333 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:38:05,227 ERROR: <client.py> <main()>: invalid literal for int() with base 10: ''
2022-06-04 23:39:32,787 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-04 23:39:37,115 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:39:37,116 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:39:37,116 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 23:39:48,155 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:39:48,156 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:39:48,156 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:39:48,156 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:48,156 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:39:55,115 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:55,115 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:55,115 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:39:57,444 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:39:57,444 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:57,444 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:57,444 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:39:58,323 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:39:58,323 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:58,323 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:58,323 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:39:58,811 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:39:58,811 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:58,811 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:58,812 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:39:59,171 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:39:59,171 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:59,171 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:59,172 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:39:59,563 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:39:59,563 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:59,563 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:59,564 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:39:59,963 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:39:59,963 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:39:59,963 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:39:59,964 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:40:00,267 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:40:00,267 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:40:00,267 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:40:00,268 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:40:00,587 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:40:00,588 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:40:00,588 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:40:00,588 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:40:00,923 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:40:00,923 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:40:00,923 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:40:00,923 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:40:01,211 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:40:01,211 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:40:01,211 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:40:01,212 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:40:03,131 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 170)
2022-06-04 23:40:03,131 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:40:03,131 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 112)
2022-06-04 23:41:35,162 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-04 23:41:39,490 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:41:39,490 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:41:39,491 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 23:41:50,866 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:41:50,867 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:41:50,867 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:41:50,867 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:41:50,867 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:41:52,586 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:41:52,586 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:41:52,586 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:41:55,810 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-04 23:42:01,698 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:42:01,698 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:42:01,699 DEBUG: <client.py> функция <request> вызвана из connect (self.request('presence'), строка 49)
2022-06-04 23:42:01,699 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:01,699 ERROR: <client.py> <self.request('presence')>: Not connected
2022-06-04 23:42:03,042 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:03,042 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:03,042 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:07,051 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:42:07,051 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:07,051 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:07,051 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:07,052 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:07,052 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:07,052 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:09,706 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:42:09,706 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:09,706 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:09,707 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:09,707 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:09,707 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:09,707 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:11,482 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:42:11,482 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:11,482 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:11,482 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:11,483 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:11,483 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:11,483 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:12,802 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 93)
2022-06-04 23:42:12,802 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:12,802 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:12,803 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:12,803 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-04 23:42:12,803 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:12,803 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 112)
2022-06-04 23:42:17,282 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 170)
2022-06-04 23:42:17,282 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 107)
2022-06-04 23:42:17,282 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 112)
2022-06-04 23:42:55,506 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:42:55,506 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:42:55,583 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 23:46:32,669 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 182)
2022-06-04 23:46:37,335 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:46:37,336 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:46:37,336 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 23:46:45,887 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 150)
2022-06-04 23:46:45,887 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 151)
2022-06-04 23:46:45,889 DEBUG: <client.py> функция <get_presence> вызвана из connect (self.get_presence(), строка 49)
2022-06-04 23:46:45,890 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 71)
2022-06-04 23:46:45,891 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 72)
2022-06-04 23:46:51,966 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 166)
2022-06-04 23:46:51,966 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 103)
2022-06-04 23:46:51,967 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 108)
2022-06-04 23:50:07,450 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-04 23:50:11,379 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:50:11,380 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:50:11,380 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-04 23:50:21,499 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:50:21,500 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:50:21,500 DEBUG: <client.py> функция <get_presence> вызвана из connect (if self.get_presence():, строка 49)
2022-06-04 23:50:21,501 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 72)
2022-06-04 23:50:21,501 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 73)
2022-06-04 23:51:15,790 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-04 23:51:19,914 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 155)
2022-06-04 23:51:19,915 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 156)
2022-06-04 23:51:19,915 DEBUG: <client.py> функция <get_presence> вызвана из connect (if self.get_presence():, строка 49)
2022-06-04 23:51:19,916 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 72)
2022-06-04 23:51:19,917 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 73)
2022-06-04 23:52:33,542 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-04 23:52:38,209 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 154)
2022-06-04 23:52:38,209 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-04 23:52:38,210 DEBUG: <client.py> функция <get_presence> вызвана из connect (if self.get_presence():, строка 49)
2022-06-04 23:52:38,211 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 72)
2022-06-04 23:52:38,211 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 73)
2022-06-04 23:53:32,712 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-04 23:53:38,312 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 155)
2022-06-04 23:53:38,312 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 156)
2022-06-04 23:53:38,313 DEBUG: <client.py> функция <get_presence> вызвана из connect (if self.get_presence():, строка 49)
2022-06-04 23:53:38,313 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 72)
2022-06-04 23:53:38,314 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 73)
2022-06-04 23:54:42,268 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-04 23:54:44,591 ERROR: <client.py> <main()>: invalid literal for int() with base 10: 'stas'
2022-06-04 23:54:51,332 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-04 23:54:57,342 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 155)
2022-06-04 23:54:57,343 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 156)
2022-06-04 23:54:57,344 DEBUG: <client.py> функция <get_presence> вызвана из connect (if self.get_presence():, строка 49)
2022-06-04 23:54:57,344 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 72)
2022-06-04 23:54:57,345 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 73)
2022-06-04 23:56:32,936 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-04 23:56:38,172 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 155)
2022-06-04 23:56:38,173 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 156)
2022-06-04 23:56:38,174 DEBUG: <client.py> функция <get_presence> вызвана из connect (if self.get_presence():, строка 49)
2022-06-04 23:56:38,175 DEBUG: <client.py> функция <send_request> вызвана из get_presence (self.send_request(request), строка 72)
2022-06-04 23:56:38,175 DEBUG: <client.py> функция <receive> вызвана из get_presence (self.receive(), строка 73)
2022-06-05 00:00:53,875 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-05 00:00:59,127 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 155)
2022-06-05 00:00:59,128 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 156)
2022-06-05 00:00:59,128 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:00:59,129 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:00:59,130 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:01:10,591 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 167)
2022-06-05 00:01:10,591 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:01:10,591 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:01:12,743 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:01:12,743 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 167)
2022-06-05 00:01:12,744 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:01:12,744 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:01:14,151 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 171)
2022-06-05 00:01:14,151 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:01:14,151 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:01:21,821 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 187)
2022-06-05 00:01:25,991 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 155)
2022-06-05 00:01:25,993 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 156)
2022-06-05 00:01:25,993 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:01:25,994 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:01:25,995 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:01:27,951 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 167)
2022-06-05 00:01:27,951 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:01:27,951 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:01:30,199 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 171)
2022-06-05 00:01:30,199 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:01:30,199 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:06:40,373 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:06:46,184 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 153)
2022-06-05 00:06:46,185 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:06:46,186 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:06:46,187 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:06:46,187 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:06:57,272 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:06:57,272 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:06:57,272 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:03,387 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:07:05,744 ERROR: <client.py> <main()>: invalid literal for int() with base 10: 'val'
2022-06-05 00:07:10,891 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:07:32,063 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 153)
2022-06-05 00:07:32,064 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:07:32,064 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:07:32,065 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:07:32,065 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:07:34,743 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:34,743 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:34,743 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:38,015 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:07:38,016 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:38,016 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:38,016 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:38,016 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:38,016 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:38,016 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:40,495 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:07:40,496 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:40,496 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:40,496 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:40,496 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:40,496 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:40,496 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:42,559 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:07:42,560 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:42,560 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:42,560 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:07:42,560 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:07:42,560 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:07:42,560 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:08:12,574 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:08:12,575 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:08:12,575 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:08:14,430 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:08:14,430 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:08:14,431 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:09:38,468 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 184)
2022-06-05 00:09:40,292 ERROR: <client.py> <main()>: invalid literal for int() with base 10: 'asad'
2022-06-05 00:12:28,749 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-05 00:12:39,704 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:12:39,705 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 153)
2022-06-05 00:12:39,705 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:12:39,706 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:12:39,706 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:12:49,432 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 167)
2022-06-05 00:12:49,432 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:12:49,432 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:13:09,649 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-05 00:13:20,055 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:13:20,055 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 153)
2022-06-05 00:13:20,056 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:13:20,057 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:13:20,057 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:13:25,062 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 167)
2022-06-05 00:13:25,063 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:13:25,063 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:13:58,770 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-05 00:14:03,302 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:14:03,304 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:14:03,305 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:14:03,305 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:14:03,306 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:14:06,333 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 163)
2022-06-05 00:14:06,333 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:14:06,333 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:14:08,413 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:14:08,413 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 163)
2022-06-05 00:14:08,414 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:14:08,414 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:14:09,901 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:14:09,902 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 163)
2022-06-05 00:14:09,902 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:14:09,902 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:14:10,605 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 167)
2022-06-05 00:14:10,606 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:14:10,606 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:14:55,838 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 183)
2022-06-05 00:14:59,052 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:14:59,054 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:14:59,055 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:14:59,056 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:14:59,056 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:15:04,627 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 167)
2022-06-05 00:15:04,627 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:15:04,628 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:16:01,946 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:16:07,010 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:16:07,013 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:16:07,013 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:16:07,015 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:16:07,015 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:16:09,683 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:16:09,683 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:16:09,683 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:16:12,298 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:16:12,298 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:16:12,298 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:16:12,298 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:16:13,314 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:16:13,314 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:16:13,314 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:16:13,314 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:16:14,370 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:16:14,370 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:16:14,370 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:16:14,370 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:16:15,642 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:16:15,642 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:16:15,642 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:16:15,642 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:16:17,217 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:16:17,217 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:16:17,217 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:17:01,108 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:17:05,376 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:17:05,379 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:17:05,380 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:17:05,381 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:17:05,381 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:17:06,977 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:17:06,977 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:17:06,978 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:17:08,552 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:17:08,552 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:17:08,552 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:17:08,552 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:17:09,880 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:17:09,880 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:17:09,880 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:17:09,880 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:17:11,184 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:17:11,184 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:17:11,184 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:25:38,991 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:25:45,634 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:25:45,637 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:25:45,638 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:25:45,639 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:25:45,640 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:25:47,051 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:25:47,052 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:25:47,052 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:25:51,212 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:25:55,922 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:25:55,924 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:25:55,924 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:25:55,925 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:25:55,925 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:25:57,475 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:25:57,475 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:25:57,475 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:25:59,930 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:25:59,930 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:25:59,930 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:25:59,930 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:25:59,931 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:25:59,931 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:25:59,931 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:26:16,281 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:26:16,282 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:26:16,282 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:26:16,282 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:26:16,282 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:26:16,282 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:26:16,283 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:20,645 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:29:20,645 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:20,645 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:29:23,635 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:29:32,548 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:29:32,550 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:29:32,551 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:29:32,551 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:29:32,552 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:29:34,030 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:34,030 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:34,030 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:38,717 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:38,717 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:38,717 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:38,717 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:38,718 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:38,718 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:38,718 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:40,484 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:40,485 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:40,485 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:40,485 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:40,485 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:40,485 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:40,486 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:41,964 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:41,965 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:41,965 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:41,965 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:41,965 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:41,965 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:41,966 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:43,556 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:43,557 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:43,557 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:43,557 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:43,557 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:43,558 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:43,558 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:45,268 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:45,269 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:45,269 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:45,269 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:45,269 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:45,270 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:45,270 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:46,892 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:46,893 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:46,893 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:46,893 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:46,893 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:46,893 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:46,893 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:49,092 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:49,092 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:49,093 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:49,093 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:49,093 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:49,093 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:49,093 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:55,396 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:55,396 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:55,397 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:55,397 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:55,397 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:55,397 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:55,397 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:56,972 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:56,972 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:56,972 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:56,972 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:56,973 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:56,973 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:56,973 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:58,644 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:29:58,644 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:58,644 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:58,644 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:29:58,645 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:29:58,645 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:29:58,645 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:08,059 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:30:08,063 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:08,063 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:30:22,395 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:30:28,347 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:30:28,349 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:30:28,350 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:30:28,351 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:30:28,351 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:30:31,027 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:30:31,027 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:31,029 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:30:34,218 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:30:38,123 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:30:38,125 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:30:38,125 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:30:38,126 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:30:38,126 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:30:39,316 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:39,317 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:39,317 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:41,667 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:30:41,667 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:41,668 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:41,671 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:41,671 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:41,671 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:41,671 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:43,115 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:30:43,115 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:43,115 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:43,116 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:43,116 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:43,116 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:43,116 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:44,563 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:30:44,563 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:44,563 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:44,563 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:44,564 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:44,564 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:44,564 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:46,723 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:30:46,723 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:46,723 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:46,723 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:30:46,724 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:30:46,724 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:30:46,724 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:25,562 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:31:25,562 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:25,562 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:31:29,163 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:31:33,609 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:31:33,611 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:31:33,612 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:31:33,612 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:31:33,613 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:31:34,931 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:34,931 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:34,931 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:36,378 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:31:36,378 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:36,378 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:36,378 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:36,379 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:36,379 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:36,379 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:37,978 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:31:37,978 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:37,978 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:37,978 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:37,978 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:37,979 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:37,979 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:39,314 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:31:39,314 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:39,314 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:39,314 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:39,314 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:39,315 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:39,315 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:40,610 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:31:40,610 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:40,610 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:40,610 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:40,610 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:40,611 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:40,611 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:42,002 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:31:42,002 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:42,002 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:42,002 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:42,002 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:42,003 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:42,003 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:43,466 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:31:43,466 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:43,466 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:43,466 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:31:43,466 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:31:43,467 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:31:43,467 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:32:52,165 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:32:59,185 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:32:59,188 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:32:59,188 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:32:59,189 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:32:59,189 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:33:00,683 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:00,684 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:00,684 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:02,465 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:02,466 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:02,466 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:02,466 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:02,466 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:02,467 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:02,467 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:04,297 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:04,297 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:04,298 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:04,298 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:04,298 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:04,298 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:04,298 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:07,439 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:07,440 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:07,440 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:07,440 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:07,440 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:07,440 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:07,441 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:08,759 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:08,760 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:08,760 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:08,760 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:08,760 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:08,760 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:08,760 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:13,441 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:13,442 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:13,442 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:13,442 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:13,442 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:13,442 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:13,442 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:16,519 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:16,519 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:16,519 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:16,520 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:16,520 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:16,520 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:16,520 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:20,263 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:20,263 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:20,264 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:20,264 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:20,264 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:20,264 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:20,264 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:26,593 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:33:26,593 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:26,594 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:26,594 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:26,594 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:33:26,594 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:26,594 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:33:48,384 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:33:48,385 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:48,385 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:33:55,358 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:33:55,358 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:55,359 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:33:58,918 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:33:58,918 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:33:58,918 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:34:54,701 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:34:58,597 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:34:58,600 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:34:58,601 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:34:58,602 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:34:58,602 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:34:59,826 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:34:59,826 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:34:59,826 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:03,669 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 185)
2022-06-05 00:35:08,244 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:35:08,246 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:35:08,247 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:35:08,248 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:35:08,248 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:35:09,478 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:09,478 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:09,478 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:22,909 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:35:22,909 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:22,909 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:22,909 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:22,910 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:22,910 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:22,910 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:24,372 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:35:24,373 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:24,373 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:24,373 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:24,373 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:24,373 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:24,373 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:25,844 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:35:25,844 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:25,845 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:25,845 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:25,845 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:25,845 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:25,845 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:27,412 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:35:27,412 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:27,412 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:27,413 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:27,413 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 165)
2022-06-05 00:35:27,413 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:27,413 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:35:32,516 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 169)
2022-06-05 00:35:32,516 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:35:32,516 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:36:26,668 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-05 00:36:30,658 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 153)
2022-06-05 00:36:30,660 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-05 00:36:30,661 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:36:30,662 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:36:30,662 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:36:31,740 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:36:31,740 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:36:31,740 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-05 00:36:33,411 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 95)
2022-06-05 00:36:33,411 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:36:33,412 DEBUG: <client.py> функция <request> вызвана из main (while client.is_connected:, строка 165)
2022-06-05 00:36:33,412 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:36:33,412 DEBUG: <client.py> функция <get_method> вызвана из request (def request(self, action, message: str = None):, строка 104)
2022-06-05 00:36:33,412 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-05 00:36:33,412 DEBUG: <client.py> функция <receive_message> вызвана из request (, строка 109)
2022-06-05 00:36:36,667 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 95)
2022-06-05 00:36:36,667 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:36:36,667 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:36:36,667 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-05 00:36:36,668 DEBUG: <client.py> функция <request> вызвана из main (while client.is_connected:, строка 165)
2022-06-05 00:36:36,668 DEBUG: <client.py> функция <get_method> вызвана из request (def request(self, action, message: str = None):, строка 104)
2022-06-05 00:36:36,668 DEBUG: <client.py> функция <receive_message> вызвана из request (, строка 109)
2022-06-05 00:38:49,077 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-05 00:38:56,785 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 153)
2022-06-05 00:38:56,787 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-05 00:38:56,787 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:38:56,788 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:38:56,788 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:38:58,338 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:38:58,339 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:38:58,339 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-05 00:39:05,938 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 186)
2022-06-05 00:39:13,416 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 153)
2022-06-05 00:39:13,418 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 155)
2022-06-05 00:39:13,419 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:39:13,420 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:39:13,420 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:39:15,650 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:39:15,651 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:39:15,651 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 110)
2022-06-05 00:39:22,033 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 95)
2022-06-05 00:39:22,033 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:39:22,033 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:39:22,033 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 110)
2022-06-05 00:39:22,034 DEBUG: <client.py> функция <request> вызвана из main (while client.is_connected:, строка 165)
2022-06-05 00:39:22,034 DEBUG: <client.py> функция <get_method> вызвана из request (def request(self, action, message: str = None):, строка 104)
2022-06-05 00:39:22,034 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 166)
2022-06-05 00:39:22,034 DEBUG: <client.py> функция <receive_message> вызвана из request (, строка 109)
2022-06-05 00:39:22,034 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:39:22,034 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 110)
2022-06-05 00:39:29,576 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 170)
2022-06-05 00:39:29,576 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:39:29,576 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 110)
2022-06-05 00:39:38,080 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 170)
2022-06-05 00:39:38,080 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:39:38,080 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 110)
2022-06-05 00:39:42,958 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 170)
2022-06-05 00:39:42,958 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 105)
2022-06-05 00:39:42,958 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 110)
2022-06-05 00:39:44,878 DEBUG: <client.py> функция <request> вызвана из main (except KeyboardInterrupt:, строка 169)
2022-06-05 00:39:44,878 DEBUG: <client.py> функция <get_method> вызвана из request (def request(self, action, message: str = None):, строка 104)
2022-06-05 00:39:44,878 DEBUG: <client.py> функция <quit> вызвана из request (, строка 109)
2022-06-05 00:45:20,924 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:45:26,206 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:45:26,209 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:45:26,210 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:45:26,211 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:45:26,211 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:45:28,344 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:45:28,344 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:45:28,344 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:45:33,231 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:45:37,278 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:45:37,280 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:45:37,280 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:45:37,281 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:45:37,281 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:45:38,367 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:45:38,368 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:45:38,368 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:45:43,981 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:45:50,376 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:45:50,379 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:45:50,380 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:45:50,380 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:45:50,381 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:45:52,211 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:45:52,211 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:45:52,212 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:45:56,731 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:46:05,455 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:46:05,457 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:46:05,457 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:46:05,458 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:46:05,458 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:46:07,705 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:07,705 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:07,705 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:13,685 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:46:13,686 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:13,686 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:13,686 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:13,686 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:13,687 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:13,686 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:13,687 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:13,687 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:13,687 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:28,103 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 00:46:28,103 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:28,104 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:46:45,447 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:46:45,447 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:45,448 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:46:48,949 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:46:48,949 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:48,949 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:46:55,004 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:46:55,005 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:55,005 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:46:56,852 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:46:56,853 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:46:56,853 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:48:33,520 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:48:37,915 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:48:37,915 ERROR: <client.py> <with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:>: password is required
2022-06-05 00:48:37,918 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:48:37,918 ERROR: <client.py> <client.connect()>: 'NoneType' object has no attribute 'connect'
2022-06-05 00:48:39,587 ERROR: <client.py> <main()>: 'NoneType' object has no attribute 'close'
2022-06-05 00:48:44,662 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:48:48,187 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:48:48,189 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:48:48,190 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:48:48,191 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:48:48,191 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:48:54,490 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:48:54,490 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:48:54,490 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:56:58,702 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:57:04,353 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:57:04,356 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:57:04,356 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:57:04,357 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:57:04,358 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:57:08,426 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:57:08,426 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:57:08,426 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:57:28,376 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:57:28,379 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:57:28,379 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:57:28,380 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:57:28,380 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:57:30,632 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:57:30,632 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:57:30,632 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:57:46,808 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:57:52,104 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:57:52,106 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:57:52,107 ERROR: <client.py> <client.connect()>: [Errno 111] Connection refused
2022-06-05 00:58:03,671 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:58:03,674 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:58:03,674 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:58:03,675 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:58:03,676 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:58:06,369 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:58:06,369 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:58:06,369 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:58:13,615 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 00:58:19,071 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:58:19,073 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:58:19,073 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:58:19,074 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:58:19,074 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:58:20,376 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:58:20,376 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:58:20,377 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:58:37,279 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:58:37,282 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:58:37,282 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:58:37,282 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:58:37,283 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:58:39,520 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:58:39,520 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:58:39,520 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:58:47,534 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 00:58:47,536 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 00:58:47,536 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 00:58:47,537 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 00:58:47,537 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 00:58:49,248 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 00:58:49,248 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:58:49,248 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 00:58:51,958 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:58:51,958 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:58:51,958 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 00:58:55,126 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 00:58:55,126 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 00:58:55,126 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 01:01:10,922 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <main> вызвана из <module> (main(), строка 122)
2022-06-05 01:01:10,922 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <__init__> вызвана из main (with TCPSocketServer(handler=RequestHandler, host=srv_host, port=srv_port) as server:, строка 115)
2022-06-05 01:01:10,922 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 86)
2022-06-05 01:01:10,923 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <serve> вызвана из main (server.serve(), строка 117)
2022-06-05 01:01:14,656 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:01:20,651 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:01:20,654 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:01:20,655 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:01:20,656 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 01:01:20,657 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:01:20,657 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:01:20,657 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:01:20,657 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:01:20,657 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:01:20,658 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:01:20,658 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:01:21,637 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:01:21,637 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:01:21,637 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:01:27,091 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:01:33,851 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:01:33,853 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:01:33,853 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:01:33,854 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 01:01:33,854 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:01:33,854 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:01:33,854 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:01:33,854 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:01:33,854 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:01:33,855 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:01:33,855 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:01:35,188 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:01:35,188 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:01:35,188 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:01:42,350 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:01:48,196 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:01:48,198 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:01:48,199 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:01:48,200 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 01:01:48,200 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:01:48,200 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:01:48,200 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:01:48,200 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:01:48,200 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:01:48,200 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:01:48,201 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:01:49,598 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:01:49,598 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:01:49,598 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:01:58,297 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:02:02,460 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:02:02,462 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:02:02,463 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:02:02,464 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 01:02:02,464 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:02:02,464 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:02:02,464 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:02:02,464 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:02:02,464 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:02:02,464 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:02:02,465 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:02:03,605 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:03,605 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:03,606 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:07,756 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:02:07,756 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:07,756 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:02:07,757 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:07,757 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:02:07,757 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:07,757 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:02:07,757 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:02:07,758 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:07,758 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:07,758 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:07,758 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:07,758 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:07,758 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:15,604 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:02:15,604 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:15,604 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:02:15,604 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:15,604 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:02:15,604 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:15,605 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:02:15,605 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:02:15,605 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:15,605 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:15,605 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:15,606 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:15,606 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:15,606 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:22,833 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:02:22,833 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:22,833 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:02:22,833 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:22,833 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:02:22,833 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:22,833 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:02:22,834 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:02:22,834 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:22,834 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:22,834 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:22,835 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:22,835 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:22,835 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:28,003 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 01:02:28,003 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:28,003 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 01:02:28,004 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:02:28,004 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:02:28,004 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:02:28,004 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:02:28,004 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <close_request> вызвана из handle_quit (self.close_request(), строка 39)
2022-06-05 01:02:34,217 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 01:02:34,218 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:34,218 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 01:02:34,218 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:02:34,218 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:02:34,218 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:02:34,219 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:02:34,219 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <close_request> вызвана из handle_quit (self.close_request(), строка 39)
2022-06-05 01:02:55,141 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:02:55,141 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:02:55,141 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:02:55,141 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:02:56,157 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:02:56,157 ERROR: <client.py> <if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):>: [Errno 32] Broken pipe
2022-06-05 01:06:18,236 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <main> вызвана из <module> (main(), строка 122)
2022-06-05 01:06:18,236 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <__init__> вызвана из main (with TCPSocketServer(handler=RequestHandler, host=srv_host, port=srv_port) as server:, строка 115)
2022-06-05 01:06:18,236 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 86)
2022-06-05 01:06:18,236 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <serve> вызвана из main (server.serve(), строка 117)
2022-06-05 01:06:22,296 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:06:27,213 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:06:27,216 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:06:27,217 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:06:27,218 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:06:27,218 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:06:27,218 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:06:27,218 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:06:27,219 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:06:27,219 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:06:27,219 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:06:28,094 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:06:28,094 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:06:28,094 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:06:32,324 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:06:36,348 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:06:36,350 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:06:36,350 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:06:36,351 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:06:36,351 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:06:36,351 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:06:36,352 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:06:36,352 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:06:36,352 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:06:36,352 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:06:37,486 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:06:37,486 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:06:37,486 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:06:42,284 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:06:42,284 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:06:42,284 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:06:42,285 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:06:42,285 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:06:42,285 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:06:42,285 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:06:42,286 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:06:42,286 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:06:42,286 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:02,556 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:02,557 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:02,557 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:38,044 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:38,044 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:38,047 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:38,047 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:41,067 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:41,068 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:41,068 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:41,068 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:42,467 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:42,468 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:42,468 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:42,468 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:44,003 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:44,004 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:44,007 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:44,007 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:45,588 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:45,588 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:45,588 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:45,588 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:47,275 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:47,276 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:47,276 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:47,276 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:48,099 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:48,099 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:48,100 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:48,100 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:49,499 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:49,499 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:49,500 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:49,500 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:50,219 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:50,220 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:50,220 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:50,220 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:50,651 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:50,651 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:50,652 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:50,652 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:51,819 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:07:51,819 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:07:51,820 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:51,820 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:07:53,803 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 01:07:53,803 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:07:53,803 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 01:07:53,804 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:08:16,259 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <main> вызвана из <module> (main(), строка 122)
2022-06-05 01:08:16,259 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <__init__> вызвана из main (with TCPSocketServer(handler=RequestHandler, host=srv_host, port=srv_port) as server:, строка 115)
2022-06-05 01:08:16,260 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 86)
2022-06-05 01:08:16,260 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <serve> вызвана из main (server.serve(), строка 117)
2022-06-05 01:08:19,718 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:08:24,570 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:08:24,573 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:08:24,574 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:08:24,575 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:08:24,575 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:08:24,575 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:08:24,575 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:08:24,576 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:08:24,576 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:08:24,576 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:08:25,603 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:25,604 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:25,604 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:29,403 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:08:33,330 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:08:33,332 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:08:33,332 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:08:33,333 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:08:33,333 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:08:33,333 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:08:33,333 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:08:33,333 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:08:33,333 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:08:33,334 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:08:34,699 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:34,699 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:34,700 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:37,026 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:08:37,026 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:37,026 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:37,026 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:08:37,026 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:37,026 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:08:37,026 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:08:37,027 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:37,027 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:37,027 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:42,898 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:42,898 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:42,899 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:43,834 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:08:43,834 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:43,834 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:43,835 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:44,866 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:08:44,866 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:44,866 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:44,867 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:08:45,818 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:08:45,818 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:08:45,818 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:08:45,819 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:09:23,505 DEBUG: <client.py> функция <request> вызвана из main (client.request(Action.quit), строка 174)
2022-06-05 01:09:23,506 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:09:23,506 DEBUG: <client.py> функция <quit> вызвана из request (handler(), строка 109)
2022-06-05 01:09:23,506 ERROR: <client.py> <handler()>: [Errno 32] Broken pipe
2022-06-05 01:09:36,916 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <main> вызвана из <module> (main(), строка 122)
2022-06-05 01:09:36,916 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <__init__> вызвана из main (with TCPSocketServer(handler=RequestHandler, host=srv_host, port=srv_port) as server:, строка 115)
2022-06-05 01:09:36,917 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <bind_and_listen> вызвана из __init__ (self.bind_and_listen(), строка 86)
2022-06-05 01:09:36,917 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <serve> вызвана из main (server.serve(), строка 117)
2022-06-05 01:09:40,557 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:09:45,672 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:09:45,675 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:09:45,676 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:09:45,677 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 01:09:45,677 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:09:45,677 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:09:45,678 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:09:45,678 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:09:45,678 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:09:45,678 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:09:45,679 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:09:47,162 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:09:47,162 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:09:47,162 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:09:50,280 DEBUG: <client.py> функция <main> вызвана из <module> (main(), строка 190)
2022-06-05 01:09:55,440 DEBUG: <client.py> функция <__init__> вызвана из main (with TCPSocketClient(host=cl_host, port=cl_port, username=username, password=password) as client:, строка 152)
2022-06-05 01:09:55,442 DEBUG: <client.py> функция <connect> вызвана из main (client.connect(), строка 154)
2022-06-05 01:09:55,442 DEBUG: <client.py> функция <send_presence> вызвана из connect (self.send_presence(), строка 49)
2022-06-05 01:09:55,443 DEBUG: <client.py> функция <send_request> вызвана из send_presence (self.send_request(request), строка 73)
2022-06-05 01:09:55,443 DEBUG: <client.py> функция <receive> вызвана из connect (if self.receive():, строка 50)
2022-06-05 01:09:55,443 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:09:55,443 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:09:55,443 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:09:55,444 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:09:55,444 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <handle_presence> вызвана из handle_request (handler(), строка 95)
2022-06-05 01:09:55,444 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <send_response> вызвана из handle_presence (self.send_response(response), строка 57)
2022-06-05 01:09:58,241 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:09:58,241 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:09:58,241 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:09:59,744 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:09:59,744 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:09:59,744 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:09:59,744 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:09:59,744 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:09:59,744 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:09:59,744 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:09:59,745 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:09:59,745 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:09:59,745 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:09:59,746 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:10:01,472 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:10:01,472 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:10:01,472 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:10:01,472 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:10:01,472 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:10:01,472 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:10:01,472 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:10:01,473 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:10:01,473 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:10:01,473 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:10:01,474 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:10:02,760 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:10:02,760 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:10:02,760 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из serve (self.handle_request(sock, write), строка 114)
2022-06-05 01:10:02,760 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:10:02,760 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <__init__> вызвана из handle_request (handler = self.request_handler(client, self, writable), строка 132)
2022-06-05 01:10:02,760 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:10:02,760 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/base.py> функция <handle_request> вызвана из handle_request (handler.handle_request(), строка 133)
2022-06-05 01:10:02,761 DEBUG: </home/stanislav/study/client_server_app/client-server-applcations/server.py> функция <get_method> вызвана из handle_request (handler = self.get_method(), строка 92)
2022-06-05 01:10:02,761 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:10:02,761 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:10:02,761 DEBUG: <client.py> функция <receive_message> вызвана из request (handler(), строка 109)
2022-06-05 01:10:08,112 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:10:08,113 DEBUG: <client.py> функция <request> вызвана из main (client.request(mode), строка 170)
2022-06-05 01:10:08,115 DEBUG: <client.py> функция <get_method> вызвана из request (handler = self.get_method(action), строка 104)
2022-06-05 01:10:08,115 DEBUG: <client.py> функция <send_message> вызвана из request (handler(), строка 109)
2022-06-05 01:10:09,040 DEBUG: <client.py> функция <send_request> вызвана из send_message (if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):, строка 94)
2022-06-05 01:10:09,040 ERROR: <client.py> <if not self.send_request(request.json(exclude_none=True, ensure_ascii=False).encode(DEFAULT_ENCODING)):>: [Errno 32] Broken pipe
